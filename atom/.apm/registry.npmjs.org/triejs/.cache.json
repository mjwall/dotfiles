{"_id":"triejs","_rev":"3-8718c693d1756d162dc106bbb0a9b18b","name":"triejs","description":"Customizable trie data structure built in JavaScript.","dist-tags":{"latest":"0.1.5"},"versions":{"0.0.2":{"name":"triejs","version":"0.0.2","author":{"name":"Paul Thurlow"},"description":"Customizable trie data structure built in JavaScript.","keywords":["trie","autocomplete","dictionary","type ahead"],"homepage":"http://pthurlow.github.com/triejs","contibutors":[],"dependencies":{},"scripts":{"test":"node tests/vendor/suite.js"},"main":"src/trie.js","repository":{"type":"git","url":"git://github.com/pthurlow/triejs.git"},"devDependencies":{},"engines":{"node":"*"},"_npmUser":{"name":"pthurlow","email":"pthurlow@yammer-inc.com"},"_id":"triejs@0.0.2","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"ae3705c25e9d9ded539d5d9094bc4df0db86abf8","tarball":"https://registry.npmjs.org/triejs/-/triejs-0.0.2.tgz"},"maintainers":[{"name":"pthurlow","email":"pthurlow@yammer-inc.com"}],"directories":{}},"0.0.3":{"name":"triejs","version":"0.0.3","author":{"name":"Paul Thurlow"},"description":"Customizable trie data structure built in JavaScript.","keywords":["trie","autocomplete","dictionary","type ahead"],"homepage":"http://pthurlow.github.com/triejs","contibutors":[],"dependencies":{},"scripts":{"test":"node tests/vendor/suite.js"},"main":"src/trie.js","repository":{"type":"git","url":"git://github.com/pthurlow/triejs.git"},"devDependencies":{},"engines":{"node":"*"},"_npmUser":{"name":"pthurlow","email":"pthurlow@yammer-inc.com"},"_id":"triejs@0.0.3","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"5d21f35db08c94d12fe8e15ad33d935f0e0b49de","tarball":"https://registry.npmjs.org/triejs/-/triejs-0.0.3.tgz"},"maintainers":[{"name":"pthurlow","email":"pthurlow@yammer-inc.com"}],"directories":{}},"0.1.1":{"name":"triejs","version":"0.1.1","author":{"name":"Paul Thurlow"},"description":"Customizable trie data structure built in JavaScript.","keywords":["trie","autocomplete","dictionary","type ahead"],"homepage":"http://pthurlow.github.com/triejs","contibutors":[],"dependencies":{},"scripts":{"test":"node tests/vendor/suite.js"},"main":"src/trie.js","repository":{"type":"git","url":"git://github.com/pthurlow/triejs.git"},"devDependencies":{},"engines":{"node":"*"},"_npmUser":{"name":"pthurlow","email":"pthurlow@yammer-inc.com"},"_id":"triejs@0.1.1","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"7e8ffd886004dc29574d792dc4fb418e9187ea7f","tarball":"https://registry.npmjs.org/triejs/-/triejs-0.1.1.tgz"},"maintainers":[{"name":"pthurlow","email":"pthurlow@yammer-inc.com"}],"directories":{}},"0.1.2":{"name":"triejs","version":"0.1.2","author":{"name":"Paul Thurlow"},"description":"Customizable trie data structure built in JavaScript.","keywords":["trie","autocomplete","dictionary","type ahead"],"homepage":"http://pthurlow.github.com/triejs","contibutors":[],"dependencies":{},"scripts":{"test":"node tests/vendor/suite.js"},"main":"src/trie.js","repository":{"type":"git","url":"git://github.com/pthurlow/triejs.git"},"devDependencies":{},"engines":{"node":"*"},"_npmUser":{"name":"pthurlow","email":"pthurlow@yammer-inc.com"},"_id":"triejs@0.1.2","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"ff6fb4e6480f92e2e87ea2166f70898956867315","tarball":"https://registry.npmjs.org/triejs/-/triejs-0.1.2.tgz"},"maintainers":[{"name":"pthurlow","email":"pthurlow@yammer-inc.com"}],"directories":{}},"0.1.4":{"name":"triejs","version":"0.1.4","author":{"name":"Paul Thurlow"},"description":"Customizable trie data structure built in JavaScript.","keywords":["trie","autocomplete","dictionary","type ahead"],"homepage":"http://pthurlow.github.com/triejs","contibutors":[],"dependencies":{},"scripts":{"test":"node tests/vendor/suite.js"},"main":"src/trie.js","repository":{"type":"git","url":"git://github.com/pthurlow/triejs.git"},"devDependencies":{},"engines":{"node":"*"},"_npmUser":{"name":"pthurlow","email":"pthurlow@yammer-inc.com"},"_id":"triejs@0.1.4","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"18c5c182c99b7aa5386244b06c65ec8cc2b24f17","tarball":"https://registry.npmjs.org/triejs/-/triejs-0.1.4.tgz"},"maintainers":[{"name":"pthurlow","email":"pthurlow@yammer-inc.com"}],"directories":{}},"0.1.5":{"name":"triejs","version":"0.1.5","author":{"name":"Paul Thurlow"},"description":"Customizable trie data structure built in JavaScript.","keywords":["trie","autocomplete","dictionary","type ahead"],"homepage":"http://pthurlow.github.com/triejs","contibutors":[],"dependencies":{"foounit":""},"scripts":{"test":"node tests/vendor/suite.js"},"main":"src/trie.js","repository":{"type":"git","url":"git://github.com/pthurlow/triejs.git"},"devDependencies":{},"engines":{"node":"*"},"_npmUser":{"name":"pthurlow","email":"pthurlow@yammer-inc.com"},"_id":"triejs@0.1.5","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"be06669de17fdd872edff4ef3c63e55920621ef1","tarball":"https://registry.npmjs.org/triejs/-/triejs-0.1.5.tgz"},"maintainers":[{"name":"pthurlow","email":"pthurlow@yammer-inc.com"}],"directories":{}}},"maintainers":[{"name":"pthurlow","email":"pthurlow@yammer-inc.com"}],"time":{"modified":"2012-04-25T16:20:01.223Z","created":"2011-12-16T21:23:07.035Z","0.0.2":"2011-12-16T21:35:13.224Z","0.0.3":"2011-12-18T07:05:11.161Z","0.1.1":"2011-12-30T04:24:58.344Z","0.1.2":"2012-01-28T00:37:38.992Z","0.1.4":"2012-04-10T16:20:46.716Z","0.1.5":"2012-04-25T16:20:01.223Z"},"author":{"name":"Paul Thurlow"},"repository":{"type":"git","url":"git://github.com/pthurlow/triejs.git"},"readme":"#Triejs [![Build Status](https://secure.travis-ci.org/pthurlow/triejs.png)](http://travis-ci.org/pthurlow/triejs)\nA Javascript implementation of a trie data structure with an extensible data \nmodel to easily customize to any need.  Visit the [Triejs page](http://pthurlow.github.com/triejs) for more info and technical details.\n\n##Usage\n\nYou can choose to drop Triejs into your project several ways.  You can download the raw source and add it via a script tag in your html.  Or if\nyou plan on using it in a node project you can install it via `npm install triejs`\n\n###Basic\nCreating a trie is as easy as creating a new object:\n\n    > var Triejs = require('triejs');\n    > var trie = new Triejs();\n\nTo add a word with some data associated it call `add`:\n\n    > trie.add(<word>, <data>);\n\nNow given any prefix of letters, you can return results possible words using `find`:\n\n    > trie.find(<word>);\n      => <data>\n\n###Advanced\n\nTo customize the data just pass optional data, including functions to support data manipulation.  These \ninclude `sort` to sort data being entered, `insert` to customize how data is input, `copy` for moving data \nbetween nodes in the trie, and `clip` for removing data from the cache layer if it grows too big.\n\n####Example\n\nOptions are passed via the constructor as a hash like so:\n\n    var trie = new Triejs({\n      // sort the data in the context 'this'\n      sort: function() {\n        this.sort(function(a, b) {\n          return b.rank - a.rank;\n        });\n      }\n      // insert data into the target\n      , insert: function(target, data) {\n        // override for non array implementation\n      }\n      // clip the data in the context 'this' to length max\n      , clip: function(max) {\n        this.splice(0, this.length - max);\n      }\n      // return a copy of data\n      , copy: function(data) {\n        // override and return new data for non array implementation\n      }\n      // merge data into target and return target\n      , merge: function(target, data) {\n        // override and return target with data merged in\n      }\n    });\n\n##Testing\n\nThe test suite is built using [Bob Remeika's foounit](https://github.com/foobarfighter/foounit) and can be tested in both the browser and in node.\nTo test in node simple run the following command `node tests/vendor/suite.js` in the root directory or if Triejs was installed using `npm` then run `npm test`\n\nTo test in a browser you will need to `npm install` and then run `foounit serve` in the root directory.  Then you can direct your browser\nto `localhost:5057/tests/vendor/runner.html` to see the test suite run\n\n##License\n\nTriejs is licensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php) copyright (c) 2012 Paul Thurlow\n","readmeFilename":"","_attachments":{},"_etag":"\"XO0IOCIIK9YQJONOIORW9HL7\""}