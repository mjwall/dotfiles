{"_id":"remark-stringify","_rev":"7-5748871ff3d5a1972b3cac0bc8154138","name":"remark-stringify","description":"Markdown compiler for remark","dist-tags":{"latest":"2.1.0"},"versions":{"0.0.0":{"name":"remark-stringify","version":"0.0.0","description":"Markdown compiler for remark","license":"MIT","keywords":["markdown","abstract","syntax","tree","ast","stringify"],"homepage":"http://remark.js.org","repository":{"type":"git","url":"https://github.com/wooorm/remark/tree/master/packages/remark-stringify"},"bugs":{"url":"https://github.com/wooorm/remark/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},{"name":"Eugene Sharygin","email":"eush77@gmail.com"}],"engines":{"node":">=0.11.0"},"files":["index.js","lib"],"dependencies":{"ccount":"^1.0.0","extend":"^3.0.0","longest-streak":"^1.0.0","markdown-table":"^0.4.0","parse-entities":"^1.0.2","repeat-string":"^1.5.4","stringify-entities":"^1.0.1","unherit":"^1.0.4"},"_id":"remark-stringify@0.0.0","scripts":{},"_shasum":"87b7c46261343afd19b2694f5cc553511fe05761","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"87b7c46261343afd19b2694f5cc553511fe05761","tarball":"https://registry.npmjs.org/remark-stringify/-/remark-stringify-0.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/remark-stringify-0.0.0.tgz_1465736120544_0.14422691543586552"},"directories":{}},"1.0.0":{"name":"remark-stringify","version":"1.0.0","description":"Markdown compiler for remark","license":"MIT","keywords":["markdown","abstract","syntax","tree","ast","stringify"],"homepage":"http://remark.js.org","repository":{"type":"git","url":"https://github.com/wooorm/remark/tree/master/packages/remark-stringify"},"bugs":{"url":"https://github.com/wooorm/remark/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},{"name":"Eugene Sharygin","email":"eush77@gmail.com"}],"engines":{"node":">=0.11.0"},"files":["index.js","lib"],"dependencies":{"ccount":"^1.0.0","extend":"^3.0.0","longest-streak":"^1.0.0","markdown-table":"^0.4.0","parse-entities":"^1.0.2","repeat-string":"^1.5.4","stringify-entities":"^1.0.1","unherit":"^1.0.4"},"_id":"remark-stringify@1.0.0","scripts":{},"_shasum":"7766fe11a3d8d557695503ed03558b9ec1fcf761","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"7766fe11a3d8d557695503ed03558b9ec1fcf761","tarball":"https://registry.npmjs.org/remark-stringify/-/remark-stringify-1.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/remark-stringify-1.0.0.tgz_1465767512030_0.42365135345607996"},"directories":{}},"1.1.0":{"name":"remark-stringify","version":"1.1.0","description":"Markdown compiler for remark","license":"MIT","keywords":["markdown","abstract","syntax","tree","ast","stringify"],"homepage":"http://remark.js.org","repository":{"type":"git","url":"https://github.com/wooorm/remark/tree/master/packages/remark-stringify"},"bugs":{"url":"https://github.com/wooorm/remark/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},{"name":"Eugene Sharygin","email":"eush77@gmail.com"}],"engines":{"node":">=0.11.0"},"files":["index.js","lib"],"dependencies":{"ccount":"^1.0.0","extend":"^3.0.0","longest-streak":"^1.0.0","markdown-table":"^0.4.0","parse-entities":"^1.0.2","repeat-string":"^1.5.4","stringify-entities":"^1.0.1","unherit":"^1.0.4"},"_id":"remark-stringify@1.1.0","scripts":{},"_shasum":"a7105e25b9ee2bf9a49b75d2c423f11b06ae2092","_from":".","_npmVersion":"3.7.3","_nodeVersion":"5.9.1","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"a7105e25b9ee2bf9a49b75d2c423f11b06ae2092","tarball":"https://registry.npmjs.org/remark-stringify/-/remark-stringify-1.1.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/remark-stringify-1.1.0.tgz_1470758341818_0.04028692073188722"},"directories":{}},"2.0.0":{"name":"remark-stringify","version":"2.0.0","description":"Markdown compiler for remark","license":"MIT","keywords":["markdown","abstract","syntax","tree","ast","stringify"],"homepage":"http://remark.js.org","repository":{"type":"git","url":"https://github.com/wooorm/remark/tree/master/packages/remark-stringify"},"bugs":{"url":"https://github.com/wooorm/remark/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},{"name":"Eugene Sharygin","email":"eush77@gmail.com"}],"engines":{"node":">=0.11.0"},"files":["index.js","lib"],"dependencies":{"ccount":"^1.0.0","is-alphanumeric":"^1.0.0","is-decimal":"^1.0.0","is-whitespace-character":"^1.0.0","longest-streak":"^1.0.0","markdown-escapes":"^1.0.0","markdown-table":"^1.0.0","mdast-util-compact":"^1.0.0","parse-entities":"^1.0.2","repeat-string":"^1.5.4","state-toggle":"^1.0.0","stringify-entities":"^1.0.1","unherit":"^1.0.4","xtend":"^4.0.1"},"_id":"remark-stringify@2.0.0","scripts":{},"_shasum":"ef20c38b5b99800eab98eddf62490a2cc8b85b51","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"ef20c38b5b99800eab98eddf62490a2cc8b85b51","tarball":"https://registry.npmjs.org/remark-stringify/-/remark-stringify-2.0.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/remark-stringify-2.0.0.tgz_1471804597748_0.9688223169650882"},"directories":{}},"2.1.0":{"name":"remark-stringify","version":"2.1.0","description":"Markdown compiler for remark","license":"MIT","keywords":["markdown","abstract","syntax","tree","ast","stringify"],"homepage":"http://remark.js.org","repository":{"type":"git","url":"https://github.com/wooorm/remark/tree/master/packages/remark-stringify"},"bugs":{"url":"https://github.com/wooorm/remark/issues"},"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},{"name":"Eugene Sharygin","email":"eush77@gmail.com"}],"engines":{"node":">=0.11.0"},"files":["index.js","lib"],"dependencies":{"ccount":"^1.0.0","is-alphanumeric":"^1.0.0","is-decimal":"^1.0.0","is-whitespace-character":"^1.0.0","longest-streak":"^1.0.0","markdown-escapes":"^1.0.0","markdown-table":"^1.0.0","mdast-util-compact":"^1.0.0","parse-entities":"^1.0.2","repeat-string":"^1.5.4","state-toggle":"^1.0.0","stringify-entities":"^1.0.1","unherit":"^1.0.4","xtend":"^4.0.1"},"_id":"remark-stringify@2.1.0","scripts":{},"_shasum":"286515da3917c38da8296ebd3a9e85f513417bad","_from":".","_npmVersion":"3.10.7","_nodeVersion":"6.3.0","_npmUser":{"name":"wooorm","email":"tituswormer@gmail.com"},"dist":{"shasum":"286515da3917c38da8296ebd3a9e85f513417bad","tarball":"https://registry.npmjs.org/remark-stringify/-/remark-stringify-2.1.0.tgz"},"maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/remark-stringify-2.1.0.tgz_1476529470292_0.28898986522108316"},"directories":{}}},"readme":"# remark-stringify [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status] [![Chat][chat-badge]][chat]\n\n[Compiler][] for [**unified**][unified].  Stringifies an\n[**mdast**][mdast] syntax tree to markdown.  Used in the [**remark**\nprocessor][processor].  Can be [extended][extend] to change how\nmarkdown is compiled.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install remark-stringify\n```\n\n## Usage\n\n```js\nvar unified = require('unified');\nvar parse = require('remark-parse');\nvar toc = require('remark-toc');\nvar stringify = require('remark-stringify');\n\nprocess.stdin\n  .pipe(unified())\n  .use(markdown)\n  .use(toc)\n  .use(html)\n  .pipe(process.stdout, {\n    bullet: '*',\n    fence: '~',\n    fences: true,\n    incrementListMarker: false\n  });\n```\n\n## Table of Contents\n\n*   [API](#api)\n    *   [processor.use(stringify)](#processorusestringify)\n    *   [stringify.Compiler](#stringifycompiler)\n*   [Extending the Compiler](#extending-the-compiler)\n    *   [Compiler#visitors](#compilervisitors)\n    *   [function visitor(node\\[, parent\\])](#function-visitornode-parent)\n*   [License](#license)\n\n## API\n\n### `processor.use(stringify)`\n\nConfigure the `processor` to stringify [**mdast**][mdast] syntax trees\nto markdown.\n\n###### `options`\n\nOptions are passed later through [`processor.stringify()`][stringify],\n[`processor.process()`][process], or [`processor.pipe()`][pipe].\nThe following settings are supported:\n\n*   `gfm` (`boolean`, default: `true`):\n    *   Escape pipes (`|`, for tables);\n    *   Escape colons (`:`, for literal URLs)\n    *   Escape tildes (`~`, for strike-through).\n*   `commonmark` (`boolean`, default: `false`):\n    *   Compile adjacent blockquotes separately;\n    *   Escape more characters using slashes, instead of as entities.\n*   `pedantic` (`boolean`, default: `false`):\n    *   Escape underscores in words.\n*   `entities` (`string` or `boolean`, default: `false`):\n\n    *   `true` â€” Entities are generated for special HTML characters\n        (`&` > `&amp;`) and non-ASCII characters (`Â©` > `&copy;`).\n        If named entities are not (widely) supported, numbered character\n        references are used (`â€™` > `&#x2019;`);\n\n    *   `'numbers'` â€” Numbered entities are generated (`&` > `&#x26;`)\n        for special HTML characters and non-ASCII characters.\n\n    *   `'escape'` â€” Special HTML characters are encoded (`&` >\n        `&amp;`, `â€™` > `&#x2019;`), non-ASCII characters not (Ã¶ persists).\n\n*   `setext` (`boolean`, default: `false`)\n    â€” Compile headings, when possible, in Setext-style: using `=` for\n    level one headings and `-` for level two headings.  Other heading\n    levels are compiled as ATX (respecting `closeAtx`).\n*   `closeAtx` (`boolean`, default: `false`)\n    â€” Compile ATX headings with the same amount of closing hashes as\n    opening hashes.\n*   `looseTable` (`boolean`, default: `false`)\n    â€” Create tables without fences (initial and final pipes).\n*   `spacedTable` (`boolean`, default: `true`)\n    â€” Create tables without spacing between pipes and content.\n*   `fence` (`'~'` or ``'`'``, default: ``'`'``)\n    â€” Fence marker to use for code blocks.\n*   `fences` (`boolean`, default: `false`)\n    â€” Stringify code blocks without language with fences.\n*   `bullet` (`'-'`, `'*'`, or `'+'`, default: `'-'`)\n    â€” Bullet marker to use for unordered list items.\n*   `listItemIndent` (`'tab'`, `'mixed'` or `'1'`, default: `'tab'`)\n\n    How to indent the content from list items:\n\n    *   `'tab'`: use tab stops (4 spaces);\n    *   `'1'`: use one space;\n    *   `'mixed'`: use `1` for tight and `tab` for loose list items.\n\n*   `incrementListMarker` (`boolean`, default: `true`)\n    â€” Whether to increment ordered list item bullets.\n*   `rule` (`'-'`, `'*'`, or `'_'`, default: `'*'`)\n    â€” Marker to use for thematic breaks (horizontal rules).\n*   `ruleRepetition` (`number`, default: `3`)\n    â€” Number of markers to use for thematic breaks (horizontal rules).\n    Should be `3` or more.\n*   `ruleSpaces` (`boolean`, default `true`)\n    â€” Whether to pad thematic break (horizontal rule) markers with\n    spaces.\n*   `strong` (`'_'` or `'*'`, default `'*'`)\n    â€” Marker to use for importance.\n*   `emphasis` (`'_'` or `'*'`, default `'_'`)\n    â€” Marker to use for emphasis.\n\n### `stringify.Compiler`\n\nAccess to the raw [compiler][], if you need it.\n\n## Extending the Compiler\n\nIf this plug-in is used, it adds a [`Compiler`][compiler] constructor\nto the `processor`.  Other plug-ins can change and add visitors on\nthe compilerâ€™s prototype to change how markdown is stringified.\n\nThe below plug-in modifies a [visitor][] to add an extra blank line\nbefore level two headings.\n\n```js\nfunction gap(processor) {\n    var Compiler = processor.Compiler;\n    var visitors = Compiler.prototype.visitors;\n    var heading = visitors.heading;\n\n    /* Add a visitor for `heading`s. */\n    visitors.heading = function (node) {\n        return (node.depth === 2 ? '\\n' : '') + heading.apply(this, arguments);\n    };\n}\n\nmodule.exports = gap;\n```\n\n### `Compiler#visitors`\n\nAn object mapping [node][] types to [`visitor`][visitor]s.\n\n### `function visitor(node[, parent])`\n\nStringify `node`.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) â€” Node to compile;\n*   `parent` ([`Node`][node], optional) â€” Parent of `node`.\n\n###### Returns\n\n`string`, the compiled given `node`.\n\n## License\n\n[MIT][license] Â© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/remark.svg\n\n[build-status]: https://travis-ci.org/wooorm/remark\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/remark.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/remark\n\n[chat-badge]: https://img.shields.io/gitter/room/wooorm/remark.svg\n\n[chat]: https://gitter.im/wooorm/remark\n\n[license]: https://github.com/wooorm/remark/blob/master/LICENSE\n\n[author]: http://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[unified]: https://github.com/wooorm/unified\n\n[processor]: https://github.com/wooorm/remark\n\n[stringify]: https://github.com/wooorm/unified#processorstringifynode-filevalue-options\n\n[process]: https://github.com/wooorm/unified#processorprocessfilevalue-options-done\n\n[pipe]: https://github.com/wooorm/unified#processorpipestream-options\n\n[compiler]: https://github.com/wooorm/unified#processorcompiler\n\n[mdast]: https://github.com/wooorm/mdast\n\n[node]: https://github.com/wooorm/unist#node\n\n[extend]: #extending-the-compiler\n\n[visitor]: #function-visitornode-parent\n","maintainers":[{"name":"wooorm","email":"tituswormer@gmail.com"}],"time":{"modified":"2016-10-15T11:04:31.940Z","created":"2016-06-12T12:55:23.165Z","0.0.0":"2016-06-12T12:55:23.165Z","1.0.0":"2016-06-12T21:38:35.308Z","1.1.0":"2016-08-09T15:59:03.559Z","2.0.0":"2016-08-21T18:36:39.185Z","2.1.0":"2016-10-15T11:04:31.940Z"},"homepage":"http://remark.js.org","keywords":["markdown","abstract","syntax","tree","ast","stringify"],"repository":{"type":"git","url":"https://github.com/wooorm/remark/tree/master/packages/remark-stringify"},"contributors":[{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},{"name":"Eugene Sharygin","email":"eush77@gmail.com"}],"author":{"name":"Titus Wormer","email":"tituswormer@gmail.com","url":"http://wooorm.com"},"bugs":{"url":"https://github.com/wooorm/remark/issues"},"license":"MIT","readmeFilename":"readme.md","_attachments":{},"_etag":"\"CEEFBJRDIB2S58B7S24VWIL00\""}