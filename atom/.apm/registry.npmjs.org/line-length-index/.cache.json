{"_id":"line-length-index","_rev":"3-a8142bb28fc7767915fb8f4cbc79fdbf","name":"line-length-index","description":"Used by Atom to keep track of the row with the longest line length.","dist-tags":{"latest":"0.0.2"},"versions":{"0.0.1":{"name":"line-length-index","version":"0.0.1","description":"Used by Atom to keep track of the row with the longest line length.","main":"dist/line-length-index.js","scripts":{"test":"npm run standard && node_modules/.bin/mocha ./test/helpers/setup  test/*","tdd":"npm run standard && node_modules/.bin/electron-mocha --renderer --interactive --recursive ./test/helpers/setup  test/","prepublish":"npm run standard && npm run clean && npm run build","standard":"standard {src,test}/**/*.js","build":"babel src --out-dir dist","clean":"rm -rf dist"},"repository":{"type":"git","url":"git+https://github.com/atom/line-length-index.git"},"keywords":["atom lines data-structure"],"author":{"name":"Nathan Sobo","email":"nathan@github.com"},"license":"MIT","bugs":{"url":"https://github.com/nathansobo/atom-patch/issues"},"homepage":"https://github.com/atom/line-length-index","devDependencies":{"babel":"^5.0.0","babel-eslint":"^4.0.5","chai":"^2.0.0","electron-mocha":"git://github.com/nathansobo/electron-mocha.git#interactive-option","electron-prebuilt":"^0.30.1","mocha":"^2.3.4","random-seed":"^0.2.0","standard":"^4.5.4"},"dependencies":{"random-seed":"^0.2.0"},"standard":{"parser":"babel-eslint","global":["describe","it","assert"]},"gitHead":"cd6629cc6eb0e52c7d7fa2723dc7c0df7dbd2251","_id":"line-length-index@0.0.1","_shasum":"2fc98f47a4c33255d7d25483d68232bdc7f97daf","_from":".","_npmVersion":"3.3.8","_nodeVersion":"4.2.1","_npmUser":{"name":"nathansobo","email":"nathan@github.com"},"dist":{"shasum":"2fc98f47a4c33255d7d25483d68232bdc7f97daf","tarball":"https://registry.npmjs.org/line-length-index/-/line-length-index-0.0.1.tgz"},"maintainers":[{"name":"nathansobo","email":"nathan@github.com"}],"directories":{}},"0.0.2":{"name":"line-length-index","version":"0.0.2","description":"Used by Atom to keep track of the row with the longest line length.","main":"dist/line-length-index.js","scripts":{"test":"npm run standard && node_modules/.bin/mocha ./test/helpers/setup  test/*","tdd":"npm run standard && node_modules/.bin/electron-mocha --renderer --interactive --recursive ./test/helpers/setup  test/","prepublish":"npm run standard && npm run clean && npm run build","standard":"standard {src,test}/**/*.js","build":"babel src --out-dir dist","clean":"rm -rf dist"},"repository":{"type":"git","url":"git+https://github.com/atom/line-length-index.git"},"keywords":["atom lines data-structure"],"author":{"name":"Nathan Sobo","email":"nathan@github.com"},"license":"MIT","bugs":{"url":"https://github.com/nathansobo/atom-patch/issues"},"homepage":"https://github.com/atom/line-length-index","devDependencies":{"babel":"^5.0.0","babel-eslint":"^4.0.5","chai":"^2.0.0","electron-mocha":"git://github.com/nathansobo/electron-mocha.git#interactive-option","electron-prebuilt":"^0.30.1","mocha":"^2.3.4","random-seed":"^0.2.0","standard":"^4.5.4"},"dependencies":{"random-seed":"^0.2.0"},"standard":{"parser":"babel-eslint","global":["describe","it","assert"]},"gitHead":"021020df01c571f1faced6ec3ac836e98a6f9762","_id":"line-length-index@0.0.2","_shasum":"9b6b70f5baa674efb26581a8f188397fbe74ca93","_from":".","_npmVersion":"3.3.8","_nodeVersion":"4.2.1","_npmUser":{"name":"nathansobo","email":"nathan@github.com"},"dist":{"shasum":"9b6b70f5baa674efb26581a8f188397fbe74ca93","tarball":"https://registry.npmjs.org/line-length-index/-/line-length-index-0.0.2.tgz"},"maintainers":[{"name":"nathansobo","email":"nathan@github.com"}],"directories":{}}},"readme":"# line-length-index\n\nThis is a module used by Atom to keep track of the row with the longest line\nlength.\n\n## Example\n\n```js\nlet lineLengthIndex = new LineLengthIndex()\n\n// Splice at a start row with a replacement row count\n// and an array of line lengths...\nlineLengthIndex.splice(0, 0, [10, 40, 10, 50, 10])\n\n// Now you can efficiently query the point at the end of the longest row\nlineLengthIndex.getPointWithMaxLineLength() // => {row: 3, column: 50}\n\n// As text changes, you can splice in new rows\nlineLengthIndex.splice(2, 2, [30, 20])\n\n// And the max row is available...\nlineLengthIndex.getPointWithMaxLineLength() // => {row: 1, column: 40}\n```\n","maintainers":[{"name":"atom","email":"nathan@github.com"},{"name":"nathansobo","email":"nathan@github.com"}],"time":{"modified":"2016-04-11T17:01:58.466Z","created":"2016-01-15T03:26:29.488Z","0.0.1":"2016-01-15T03:26:29.488Z","0.0.2":"2016-01-15T16:31:24.225Z"},"homepage":"https://github.com/atom/line-length-index","keywords":["atom lines data-structure"],"repository":{"type":"git","url":"git+https://github.com/atom/line-length-index.git"},"author":{"name":"Nathan Sobo","email":"nathan@github.com"},"bugs":{"url":"https://github.com/nathansobo/atom-patch/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"3AEVRKF3F1GYG4WXYMOB80P9A\""}