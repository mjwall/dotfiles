{"name":"tool-bar","version":"1.0.1","description":"Package providing customisable tool bar","keywords":["toolbar","tool-bar","service"],"license":"MIT","main":"./lib/tool-bar","repository":{"url":"git+https://github.com/suda/tool-bar.git"},"scripts":{"lint":"eslint --format tap . && remark ."},"dependencies":{"grim":"^2.0.0","jquery":"^3.0.0"},"devDependencies":{"babel-eslint":"^6.0.4","eslint":"^2.9.0","eslint-config-standard":"^5.2.0","eslint-plugin-promise":"^1.1.0","eslint-plugin-standard":"^1.3.2","remark":"^4.1.1","remark-lint":"^3.0.0"},"engines":{"atom":">=1.0.0"},"providedServices":{"tool-bar":{"description":"A container for buttons at workspace edge","versions":{"0.1.0":"provideToolBarLegacy","1.0.0":"provideToolBar"}}},"readme":"# Atom Tool Bar\n\n[![Travis CI](https://travis-ci.org/suda/tool-bar.svg?branch=master)](https://travis-ci.org/suda/tool-bar)\n[![Circle CI](https://circleci.com/gh/suda/tool-bar/tree/master.svg?style=svg)](https://circleci.com/gh/suda/tool-bar/tree/master)\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/xtm6u3sn3oil50da?svg=true)](https://ci.appveyor.com/project/suda/tool-bar)\n[![Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/suda/tool-bar?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis package provides extensible tool bar for Atom.\n\n**Note:** this package by itself adds an empty toolbar. To propagate it with\nicons you can [install plugins](#plugins).\n\n![Horizontal](http://cl.ly/image/2w0u3c1x1K3W/Screenshot-2015-04-21-16.46.49.png)\n\n![Vertical](http://cl.ly/image/1t3U3F191p35/Screenshot-2015-04-21-16.45.46.png)\n\n![Different Sizes](http://cl.ly/image/3v1N2F3e3I47/Screenshot-2015-04-21-16.45.46_2.png)\n\n![Light Theme](http://cl.ly/image/0g043b1e0P1X/Screenshot-2015-04-21-16.46.02.png)\n\n## Configuration\n\n### Position\n\nOn which edge of the editor should the tool bar appear. Possible options:\n\n*   Top\n*   Right\n*   Bottom\n*   Left\n\n### Icon size\n\n*   Very Small *(12px)*\n*   Small *(16px)*\n*   Big *(24px)*\n*   Large *(32px)*\n\n### Visibility\n\n*   Visible\n*   Hidden\n\n### Full Width (available in Atom >= 1.7)\n\nWhen on top/bottom, expand to full window width.\n\n## Plugins\n\n*   [Flex Tool Bar](https://atom.io/packages/flex-tool-bar)\n*   [Tool Bar Main](https://atom.io/packages/tool-bar-main)\n*   [Toolbar Almighty](https://atom.io/packages/tool-bar-almighty)\n*   [Toolbar for Atom](https://atom.io/packages/tool-bar-atom)\n*   [Toolbar Shortcuts](https://atom.io/packages/tool-bar-shortcuts)\n*   And [more](https://atom.io/packages/search?utf8=%E2%9C%93&q=keyword%3Atool-bar)...\n\n## Packages using tool-bar\n\n*   [Particle Dev](https://atom.io/packages/spark-dev)\n*   [Facebook Nuclide](https://atom.io/packages/nuclide)\n*   [PlatformIO IDE](https://atom.io/packages/platformio-ide)\n\n## Integrating instructions\n\nBy itself this package shows an empty tool bar. To add buttons and spacers to\nthe tool bar, follow the instructions below.\n\n### Package.json\n\nMake sure the following properties are part of your `package.json`.\n\n```json\n\"consumedServices\": {\n  \"tool-bar\": {\n    \"versions\": {\n      \"^0 || ^1\": \"consumeToolBar\"\n    }\n  }\n}\n```\n\nWe recommend using [Atom-Package-Deps](https://github.com/steelbrain/package-deps) \nin your package for installing dependency packages like this package.\n\n### Main package file\n\nIn your main package file, add the following methods and replace\n`your-package-name` with your package name.\n\n```js\nlet toolBar;\n\nexport function consumeToolBar(getToolBar) {\n  toolBar = getToolBar('your-package-name');\n  // Add buttons and spacers here...\n}\n\nexport function deactivate() {\n  if (toolBar) {\n    toolBar.removeItems();\n    toolBar = null;\n  }\n}\n```\n\n### Example\n\n```js\nlet toolBar;\n\nexport function consumeToolBar(getToolBar) {\n  toolBar = getToolBar('your-package-name');\n\n  // Adding button\n  toolBar.addButton({\n    icon: 'octoface',\n    callback: 'application:about',\n    tooltip: 'About Atom'\n  });\n\n  // Adding spacer\n  toolBar.addSpacer();\n\n  // Using custom icon set (Ionicons)\n  const button = toolBar.addButton({\n    icon: 'gear-a',\n    callback: 'application:show-settings',\n    tooltip: 'Show Settings',\n    iconset: 'ion'\n  });\n\n  // Disable button\n  button.setEnabled(false);\n\n  // Function with data in callback\n  toolBar.addButton({\n    icon: 'alert',\n    callback(data) {\n      alert(data);\n    },\n    tooltip: 'Show Alert',\n    data: 'foo'\n  });\n\n  // Callback with modifiers\n  toolBar.addButton({\n    icon: 'octoface',\n    callback: {\n      '': 'application:cmd-1',      // Without modifiers is default action\n      'alt': 'application:cmd-2',\n      'ctrl': 'application:cmd-3',  // With function callback\n      'shift'(data) {\n        console.log(data);\n      },\n      'alt+shift': 'application:cmd-5',       // Multiple modifiers\n      'alt+ctrl+shift': 'application:cmd-6'   // All modifiers \n    },\n    data: 'foo'\n  });\n\n  // Adding spacer and button at the beginning of the tool bar\n  toolBar.addSpacer({priority: 10});\n  toolBar.addButton({\n    icon: 'octoface',\n    callback: 'application:about',\n    priority: 10\n  });\n\n  // Cleaning up when tool bar is deactivated\n  toolBar.onDidDestroy(() => {\n    this.toolBar = null;\n    // Teardown any stateful code that depends on tool bar ...\n  });\n}\n```\n\n## Methods\n\n### `.addButton({icon, callback, priority, tooltip, data})`\n\nThe method `addButton` requires an object with at least the properties `icon`\nand `callback`. The `icon` can be any single icon from the `iconset`. The\n`callback` must be an Atom command string, an custom callback function or an\nobject where the keys are key modifiers (`alt`, `ctrl` or `shift`) and the\nvalues are commands or custom function (see [example](#example)).\n\nThe remaining properties `tooltip` (default there is no tooltip),\n`iconset` (defaults to `Octicons`), `data` and `priority` (defaults `50`)\nare optional.\n\nThe return value of this method shares another method called \n`setEnabled(enabled)` to enable or disable the button.\n\n### `.addSpacer({priority})`\n\nThe method `addSpacer` has only one optional property `priority` (defaults\n`50`).\n\n### `.removeItems()`\n\nUse the method `removeItems` to remove the buttons added by your package. This\nis particular useful in your package `deactivate` method, but can be used at\nany time.\n\n### `.onDidDestroy(callback)`\n\nThe `onDidDestroy` method takes a function that will be called when the\n`tool-bar` package is destroyed. This is useful if your package needs to do\ncleanup when the `tool-bar` is deactivated but your package continues running.\n\n## Supported icon sets\n\n*   [Octicons](https://octicons.github.com) (Atom's flavour)\n*   [Ionicons](http://ionicons.com) (`ion`)\n*   [FontAwesome](http://fortawesome.github.io/Font-Awesome) (`fa`)\n*   [Foundation](http://zurb.com/playground/foundation-icon-fonts-3) (`fi`)\n*   [IcoMoon](https://icomoon.io) (`icomoon`)\n*   [Devicon](http://devicon.fr) (`devicon`)\n*   [MaterialDesignIcons](https://materialdesignicons.com/) (`mdi`)\n\n## Supported commands\n\n*   `tool-bar:toggle`\n*   `tool-bar:position-top`\n*   `tool-bar:position-right`\n*   `tool-bar:position-bottom`\n*   `tool-bar:position-left`\n\n## Authors\n\n*   [Wojtek Siudzinski](http://suda.pl) <sup>(owner)</sup>\n*   [Jeroen van Warmerdam](https://github.com/jerone)\n*   [Ryo Narita](https://github.com/cakecatz)\n\n## Contributors\n\nIssues and pull requests are very welcome. Feel free to write your own packages\nusing this one. For all contributions credits are due:\n\n*   [Pascal Bihler](https://github.com/pbihler)\n*   [Nikita Gusakov](https://github.com/nkt)\n*   Carlos Santos\n*   [Daniel Alejandro Cast](https://github.com/lexcast)\n*   [James Coyle](https://github.com/JamesCoyle)\n*   [Andres Suarez](https://github.com/zertosh)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/suda/tool-bar/issues"},"homepage":"https://github.com/suda/tool-bar#readme","_id":"tool-bar@1.0.1","_shasum":"20fd58e53b6e0bcecf09baa0653dc791c0a0199f","_resolved":"file:../d-11698-13603-pml3ly/package.tgz","_from":"../d-11698-13603-pml3ly/package.tgz"}